<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-05T23:41:27 IST" name="Suite" finished-at="2022-10-05T23:42:52 IST" duration-ms="84229">
    <groups>
    </groups>
    <test started-at="2022-10-05T23:41:27 IST" name="Test1" finished-at="2022-10-05T23:41:53 IST" duration-ms="25668">
      <class name="com.amazon.Testcases.TestCase1">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.amazon.Testcases.TestCase1@7b36aa0c]" started-at="2022-10-05T23:41:28 IST" name="setUp" finished-at="2022-10-05T23:41:32 IST" duration-ms="4759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPriceOfItem(double,double)[pri:0, instance:com.amazon.Testcases.TestCase1@7b36aa0c]" started-at="2022-10-05T23:41:32 IST" name="verifyPriceOfItem" finished-at="2022-10-05T23:41:53 IST" duration-ms="20670" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[This price value is not in the selected range of 100-2000$ =$94.99 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: This price value is not in the selected range of 100-2000$ =$94.99 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at com.amazon.Testcases.TestCase1.verifyPriceOfItem(TestCase1.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceOfItem -->
        <test-method is-config="true" signature="QuitBrowser()[pri:0, instance:com.amazon.Testcases.TestCase1@7b36aa0c]" started-at="2022-10-05T23:41:53 IST" name="QuitBrowser" finished-at="2022-10-05T23:41:53 IST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuitBrowser -->
      </class> <!-- com.amazon.Testcases.TestCase1 -->
    </test> <!-- Test1 -->
    <test started-at="2022-10-05T23:41:53 IST" name="Test2" finished-at="2022-10-05T23:42:11 IST" duration-ms="18131">
      <class name="com.amazon.Testcases.TestCase2">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.amazon.Testcases.TestCase2@76b1e9b8]" started-at="2022-10-05T23:41:53 IST" name="setUp" finished-at="2022-10-05T23:41:56 IST" duration-ms="3219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySortingOrder(double,double)[pri:0, instance:com.amazon.Testcases.TestCase2@76b1e9b8]" started-at="2022-10-05T23:41:56 IST" name="verifySortingOrder" finished-at="2022-10-05T23:42:11 IST" duration-ms="14703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortingOrder -->
        <test-method is-config="true" signature="QuitBrowser()[pri:0, instance:com.amazon.Testcases.TestCase2@76b1e9b8]" started-at="2022-10-05T23:42:11 IST" name="QuitBrowser" finished-at="2022-10-05T23:42:11 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuitBrowser -->
      </class> <!-- com.amazon.Testcases.TestCase2 -->
    </test> <!-- Test2 -->
    <test started-at="2022-10-05T23:42:11 IST" name="Test3" finished-at="2022-10-05T23:42:52 IST" duration-ms="40364">
      <class name="com.amazon.Testcases.TestCase3">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.amazon.Testcases.TestCase3@563f38c4]" started-at="2022-10-05T23:41:27 IST" name="setup" finished-at="2022-10-05T23:41:27 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.amazon.Testcases.TestCase3@563f38c4]" started-at="2022-10-05T23:42:11 IST" name="setUp" finished-at="2022-10-05T23:42:16 IST" duration-ms="4173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignInScreen(double,double)[pri:0, instance:com.amazon.Testcases.TestCase3@563f38c4]" started-at="2022-10-05T23:42:16 IST" name="verifySignInScreen" finished-at="2022-10-05T23:42:51 IST" duration-ms="35839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignInScreen -->
        <test-method is-config="true" signature="QuitBrowser()[pri:0, instance:com.amazon.Testcases.TestCase3@563f38c4]" started-at="2022-10-05T23:42:51 IST" name="QuitBrowser" finished-at="2022-10-05T23:42:52 IST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuitBrowser -->
        <test-method is-config="true" signature="tearDownExtent()[pri:0, instance:com.amazon.Testcases.TestCase3@563f38c4]" started-at="2022-10-05T23:42:52 IST" name="tearDownExtent" finished-at="2022-10-05T23:42:52 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownExtent -->
      </class> <!-- com.amazon.Testcases.TestCase3 -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
